// Generated by CoffeeScript 1.4.0
var start;

start = function(context, notifier, moduleFn) {
  notifier.use(function(msg, next) {
    return next();
  });
  if (context.spec == null) {
    context.spec = './spec';
  }
  if (context.lib == null) {
    context.lib = './lib';
  }
  if (context.src == null) {
    context.src = './src';
  }
  context.tools.monitor.directory(context.src, function(placeholder, file, stat) {
    var compile, ensureSpec, ext;
    ext = file.match(/\.(\w*)$/)[1];
    switch (ext) {
      case 'coffee':
      case 'litcoffee':
        compile = context.tools.compiler.coffee.compile;
        ensureSpec = context.tools.compiler.coffee.ensureSpec;
        break;
      default:
        try {
          compile = context.tools.compiler[ext].compile;
        } catch (_error) {}
        try {
          ensureSpec = context.tools.compiler.coffee.ensureSpec;
        } catch (_error) {}
    }
    compile || (compile = function() {
      return console.log('no compiler for', file);
    });
    ensureSpec || (ensureSpec = function() {});
    return compile({
      dst: context.lib,
      src: context.src,
      file: file
    }, function(error) {
      if (ensureSpec == null) {
        return;
      }
      if (error != null) {
        return;
      }
      return ensureSpec({
        src: context.src,
        spec: context.spec,
        file: file
      });
    });
  });
  context.tools.monitor.directory(context.spec, function(placeholder, file, stat) {});
  notifier.event('objective::start', {
    "class": 'eo:develop',
    properties: context
  });
  return moduleFn();
};

exports.start = start;
