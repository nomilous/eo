// Generated by CoffeeScript 1.4.0
var Objective, Uplink,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Uplink = require('./uplink');

module.exports = Objective = (function() {

  function Objective() {
    this.bind = __bind(this.bind, this);

  }

  Objective.prototype.configure = function(scaffold, opts) {
    if (opts.nimbal) {
      if (typeof this.protocol !== 'function') {
        this.protocol = function(When, Then) {};
      }
      if (typeof this.instance !== 'function') {
        this.instance = function() {
          return {
            "class": 'eo:Objective',
            version: 0
          };
        };
      }
      return Uplink.start(opts.nimbal, opts.secret, this.bind);
    }
  };

  Objective.prototype.uplink = {};

  Objective.prototype.bind = function(When, Then) {
    var _this = this;
    this.protocol(When, Then);
    this.uplink.When = When;
    this.uplink.Then = Then;
    return When('register?', function(payload) {
      return Then('register!', {
        _node: {
          Entity: {
            owner: {},
            "implements": [
              {
                "class": 'symbal:Objective',
                version: 0
              }
            ],
            instance: _this.instance()
          }
        }
      });
    });
  };

  Objective.prototype.edge = function(placeholder, nodes) {};

  Objective.prototype.hup = function() {};

  Objective.prototype.handles = [];

  Objective.prototype.matches = [];

  return Objective;

})();
