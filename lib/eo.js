// Generated by CoffeeScript 1.4.0
var develop, eo, messenger, started, validate;

develop = require('./objectives/develop');

started = false;

messenger = function(context) {
  if (context.module == null) {
    return develop.messenger;
  }
  if (typeof context.module.messenger === 'function') {
    return context.module.messanger;
  }
  return function(msg, next) {
    var title;
    title = msg.context.title;
    if (!started) {
      console.log("objective without messenger");
      started = true;
    }
    return next();
  };
};

validate = function(title, opts, objectiveFn) {
  var context, key;
  context = {
    title: title
  };
  for (key in opts) {
    context[key] = opts[key];
  }
  if (context.secret == null) {
    context.secret = '';
  }
  if (typeof title !== 'string') {
    throw new Error('objective(title, opts, fn) requires title as string');
  }
  if (typeof opts.description !== 'string') {
    throw new Error('objective(title, opts, fn) requires opts.description as string');
  }
  if (typeof objectiveFn !== 'function') {
    throw new Error('objective(title, opts, fn) requires function as last argument');
  }
  return context;
};

eo = function(context, notice, moduleFn) {
  if (context.module == null) {
    context.module = develop;
  }
  if (typeof context.module === 'string') {
    context.module = require(context.module);
  }
  return context.module.start(context, notice, moduleFn, function(task) {});
};

eo.validate = validate;

eo.develop = develop;

eo.messenger = messenger;

module.exports = eo;
